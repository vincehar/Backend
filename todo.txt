Avant tout, il faut synchroniser les versions de spackages nécessaires.
dans packages.txt il y a la liste des packages et leur version.

il faut lancer la commande de desinstll suivante pour chaque package:

sudo pip unistall <nom package>

et installer la bonne version:

sudo pip install <nom package>==<version> (exactement comme les lignes du fichier)


pour s'amuser avec le shell, il faut créer la db upto.
dans un shell, taper la commande "mongo"

ubuntu@ubuntu-upto:~/PycharmProjects/NHPartners$ mongo
MongoDB shell version: 2.4.9
connecting to: test
Server has startup warnings: 
Fri Feb  5 19:50:44.517 [initandlisten] 
Fri Feb  5 19:50:44.517 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary.
Fri Feb  5 19:50:44.517 [initandlisten] **       32 bit builds are limited to less than 2GB of data (or less with --journal).
Fri Feb  5 19:50:44.517 [initandlisten] **       See http://dochub.mongodb.org/core/32bit
Fri Feb  5 19:50:44.612 [initandlisten] 

Ensuite il faut taper use upto pour créer la db upto.

> use upto
switched to db upto

Ensuite onpeut aller dans le shell.

dans le terminal, dans /home/ubuntu/PycharmProjects/NHPartners il faut taper la commande :

./manage.py shell

> execfile('upto/mock.py')

une fois qu'on a créé tout ça, on trouve les collections existantes avec la commande :


ubuntu@ubuntu-upto:~/PycharmProjects/NHPartners$ mongo
MongoDB shell version: 2.4.9
connecting to: test
Server has startup warnings:
Fri Feb  5 19:50:44.517 [initandlisten]
Fri Feb  5 19:50:44.517 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary.
Fri Feb  5 19:50:44.517 [initandlisten] **       32 bit builds are limited to less than 2GB of data (or less with --journal).
Fri Feb  5 19:50:44.517 [initandlisten] **       See http://dochub.mongodb.org/core/32bit
Fri Feb  5 19:50:44.612 [initandlisten]

Ensuite il faut taper use upto pour créer la db upto.

> use upto
switched to db upto


> db.getCollectionNames()
[ "system.indexes", "user", "users", "wishes" ]


> db.users.find().pretty()
{
	"_id" : ObjectId("56b5a35d4303560ddb96df43"),
	"user" : {
		"_id" : ObjectId("56b5a2604303560ddb96df42"),
		"_cls" : "User",
		"username" : "alex",
		"is_staff" : false,
		"is_active" : true,
		"is_superuser" : false,
		"last_login" : ISODate("2016-02-06T07:36:00.677Z"),
		"date_joined" : ISODate("2016-02-06T07:36:00.687Z"),
		"user_permissions" : [ ]
	},
	"wishes" : [
		{
			"title" : "foot"
		}
	]
}
{
	"_id" : ObjectId("56b5a8784303560f5e30a67d"),
	"user" : {
		"_id" : ObjectId("56b5a8784303560f5e30a67c"),
		"_cls" : "User",
		"username" : "marc",
		"is_staff" : false,
		"is_active" : true,
		"is_superuser" : false,
		"last_login" : ISODate("2016-02-06T08:02:00.614Z"),
		"date_joined" : ISODate("2016-02-06T08:02:00.614Z"),
		"user_permissions" : [ ]
	},
	"wishes" : [
		{
			"title" : "cine"
		}
	]
}
>



pour requeter dans les wishes, il faut taper la commande ;

> db.users.find({}, {wishes:true}).pretty()
{
	"_id" : ObjectId("56b5a35d4303560ddb96df43"),
	"wishes" : [
		{
			"title" : "foot"
		}
	]
}
{
	"_id" : ObjectId("56b5a8784303560f5e30a67d"),
	"wishes" : [
		{
			"title" : "cine"
		}
	]
}


supprimer la db:
> db.dropDatabase()


#-------------------------------------------------------------
# Installations des packages pour JSON / rest framework
#-------------------------------------------------------------

sudo pip install djangorestframework

download https://pypi.python.org/packages/source/d/django-cors-headers/django-cors-headers-1.1.0.tar.gz#md5=204728fda96f9951ebfd8c2cabb54dfb
unzip

sudo python setup.py install
#-------------------------------------------------------------


#-------------------------------------------------------------
# Installations du package django rest framework mongoengine
#-------------------------------------------------------------
 sudo pip install django-rest-framework-mongoengine

#-------------------------------------------------------------
# Installation account register
#-------------------------------------------------------------
sudo pip install regme

> python
> import regme
> regme

sudo vi /usr/local/lib/python2.7/dist-packages/regme/forms.py

remplacer
if self.cleaned_data.keys() == {'username', 'activation_key'}:
par
if self.cleaned_data.keys() == ['username', 'activation_key']:

sudo pip install mongodbforms

sudo vi /usr/local/lib/python2.7/dist-packages/mongodbforms/documentoptions.py

comment line #7:
#from django.db.models.options import get_verbose_name
and insert line
from django.utils.text import camel_case_to_spaces as get_verbose_name

sudo pip install django-registration

#-------------------------------------------------------------
# Installation Facebook register
#-------------------------------------------------------------
modify /etc/hosts
update line first line to : 127.0.0.1	youweesh.local.com

#-------------------------------------------------------------
# Installation RabbitMq
#-------------------------------------------------------------
sudo pip installer pika
Download the deb file on http://www.rabbitmq.com/install-debian.html
Install the package : sudo dpkg -i [deb filename]

After installing the package, enable the management plugin :
sudo rabbitmq-plugins enable rabbitmq_management

And Restart :
sudo /etc/init.d/rabbitmq-server restart

The management plugin provides a web interface for configuring the server. By default it runs at port 15762

The default username is “guest” and the password is “guest”.

Messaging in a Web Browser using RabbitMQ-Web-Stomp (The RabbitMQ-Web-Stomp plugin allows web browsers to do messaging using SockJS.)

Install the Web Stomp plugin :
sudo rabbitmq-plugins enable rabbitmq_web_stomp

Restart RabbitMq. You should now get a hello page in port 15674 (http://localhost:15674/stomp)

You have to creator the user  youweesh with the password upto2016 with the admin access

# -------------------------------------
#           Geolocalisation
# -------------------------------------
pip install -U googlemaps

download https://pypi.python.org/pypi/responses/0.5.0
unzip
sudo python setup.py install